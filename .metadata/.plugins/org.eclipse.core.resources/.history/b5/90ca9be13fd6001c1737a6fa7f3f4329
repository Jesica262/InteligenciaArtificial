package frsf.cidisi.exercise.plantsVsZombies.search.actions;

import frsf.cidisi.exercise.plantsVsZombies.search.EstadoPlanta;
import frsf.cidisi.exercise.plantsVsZombies.search.EstadoJardin;
import frsf.cidisi.exercise.plantsVsZombies.search.PercepcionPlanta;
import frsf.cidisi.faia.agent.search.SearchAction;
import frsf.cidisi.faia.agent.search.SearchBasedAgentState;
import frsf.cidisi.faia.state.AgentState;
import frsf.cidisi.faia.state.EnvironmentState;

public class MoverArriba extends SearchAction {

		@Override
        public SearchBasedAgentState execute(SearchBasedAgentState s) {

            EstadoPlanta plantsState = (EstadoPlanta) s;

            int row = plantsState.getRowPosition();
            int col = plantsState.getColumnPosition();

            // Mover Arriba significa que va de la fila 4 a la 0 permaneciendo en la misma columna, por lo que el valor de la fila va disminuyendo 
            if (row >0)
            {
            	plantsState.setRowPosition(row-1);
            }
          
    		return plantsState;
        }
          

        @Override
        public EnvironmentState execute(AgentState ast, EnvironmentState est) {

            EstadoJardin environmentState = (EstadoJardin) est;
            EstadoPlanta plantsState = ((EstadoPlanta) ast);
           

            int row = environmentState.getPosicionAgente()[0];
            int col = environmentState.getPosicionAgente()[1];
    	
        	if(row > 0) 
        	{
        		plantsState.setRowPosition(row-1);
        		environmentState.setPosicionAgente(new int[]{row-1, col});
        	}
        	return environmentState;	
        }
<<<<<<< HEAD
    	else if (plantsState.getmatrizPosition(row, col) == PercepcionPlanta.PERCEPCION_VACIO) 
    	{
    		
    	if(row < 4) {
    		
    		if(plantsState.getmatrizPosition(row+1, col) == PercepcionPlanta.PERCEPCION_VACIO && plantsState.getCantidadSol()>1)
    		{
    			if(col==0)
    			{
    				int valor = plantsState.numeroRandomGirasol();
                	plantsState.setCantidadSol(plantsState.getCantidadSol()-1);
                	plantsState.setmatrizPosition(row, col, valor+5);
                	plantsState.setCeldasVisitadasY(plantsState.getCeldasVisitadasY()+1);
                	plantsState.setRowPosition(row+1);
                	environmentState.setCeldasVisitadasY(plantsState.getCeldasVisitadasY());
                	environmentState.setCantidadSoles(plantsState.getCantidadSol());
                	environmentState.setMatriz(row+1, col, valor);
                	return environmentState;
    			}
    			
            }  
    		else if(plantsState.getmatrizPosition(row+1, col) >= PercepcionPlanta.PERCEPCION_ENEMIGO1
            		&& plantsState.getmatrizPosition(row+1, col) <= PercepcionPlanta.PERCEPCION_ENEMIGO5)
            {
        		 
          		plantsState.setCantidadSol(plantsState.getCantidadSol()-plantsState.getmatrizPosition(row+1, col));
          		
            	// Atacar zombie 
            	if(plantsState.getCantidadSol() > plantsState.getmatrizPosition(row+1, col))
            	{
            		
            		plantsState.setRowPosition(row+1);
            		plantsState.setContadorZombie(plantsState.getContadorZombie()+1);
            		environmentState.setContadorZombie(plantsState.getContadorZombie());
            		plantsState.setmatrizPosition(row+1, col, PercepcionPlanta.PERCEPCION_VACIO);
            		environmentState.setMatriz(row+1, col, PercepcionPlanta.PERCEPCION_VACIO);
            		environmentState.setCantidadSoles(plantsState.getCantidadSol());
            		plantsState.setCeldasVisitadasY(plantsState.getCeldasVisitadasY()+1);
                	environmentState.setCeldasVisitadasY(plantsState.getCeldasVisitadasY());
                	//System.out.println("celdas visitadas: "+plantsState.getCeldasVisitadas()+" ---  "+plantsState.getContadorZombie()+"\n");
                    
                	return environmentState;                    		
            	}
            	else
            	{
            		return null;
            	}
            }
            else {

            	         	
            	plantsState.setRowPosition(row+1);
            	plantsState.setCeldasVisitadasY(plantsState.getCeldasVisitadasY()+1);
            	plantsState.setZombiePercibidos(plantsState.getZombiePercibidos());
            	environmentState.setCeldasVisitadasY(plantsState.getCeldasVisitadasY());
            	environmentState.setZombiePercibido(plantsState.getZombiePercibidos());
            	System.out.println("\n Agente State: "+plantsState+"\n");
            	return environmentState;
            }
    	}
    	else {
    		return null;
    	}
    }
	return null;
    }
=======
>>>>>>> c4cbb368079cece6fab8862d9fca81d6133b7c2e
    @Override
    public Double getCost() {
        return new Double(0);
    }

    @Override
    public String toString() {
        return "Mover Arriba";
    }
}
